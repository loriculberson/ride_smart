$(document).ready(function (){
  var mapCanvas = $('#map-canvas');

  var mapOptions = {
    zoom: 18,
    scrollwheel: false,
    mapTypeId: google.maps.MapTypeId.ROADMAP
  };

  var markers = [];
  var initialLocation;
  var denver = new google.maps.LatLng(39.7392, -104.9903);
  var map = new google.maps.Map(mapCanvas[0], mapOptions);
  var icons = {
    accident: {
      url: "<%= asset_path('bike_marker2.png') %>"
    },
    hazard: {
      url: "<%= asset_path('pin_orange.png') %>"
    },
    animal: {
      url: "<%= asset_path('pin_purple.png') %>"
    },
    other: {
      url: "<%= asset_path('pin_blue.png') %>"
    }
  };

  var legend = document.getElementById('legend');

  map.controls[google.maps.ControlPosition.LEFT_BOTTOM].push(
    document.getElementById('legend'));

  var icon_types = new Array();
  var icon_urls = new Array();
  var legend_text = 'LEGEND' + '<br>';

  for (var icon in icons) {
    icon_types.push(icon);
    icon_urls.push(icons[icon].url);
  }

  for (var i = 0, j = icon_types.length; i<j; i++) {
    var div = document.createElement('div');
    legend_text += '<img src="' + icon_urls[i] + '"> ' + icon_types[i] + "<br>";
    div.innerHTML = legend_text;
  }

  document.getElementById("legend").innerHTML = legend_text;

  fetchAllMarkers(map);
  //W3C Geolocation preferred
  if(navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      var initialLocation = new google.maps.LatLng(
                          position.coords.latitude,
                          position.coords.longitude
      );

      map.setCenter(initialLocation);

      var youMarker = new google.maps.Marker({
                    position: initialLocation,
                    map: map
      });

    }, function() {
      handleNoGeolocation(true);
    });
  } else {
    //if browser doesn't support Geolocation
    handleNoGeolocation(false);
  }

  function handleNoGeolocation(errorFlag) {
    if (errorFlag) {
      alert("Geolocation service failed");
      initialLocation = denver;
    } else {
      alert("Your browser doesn't support geolocation. We've placed you in Denver.");
      initialLocation = denver;
    }
    map.setCenter(initialLocation);
  }

  if ( window.hasOwnProperty('current_user') ) {
    // click on map and add a pin
    function loggedInUser(event){
      if (isInfoWindowOpen()) {
        return;
      }

      function bindEvents() {
        var bikeEventForm = $(bikeInfoWindow.getContent());
        //if there are errors in the new bike event form
        bikeEventForm.on('ajax:error', function(event, xhr) {
          var errorsDivContent = xhr.responseText;   //this is html
          initialBikeEventForm.find('.errors').html(errorsDivContent);
          bindEvents();
        })
        //successful creation of a marker, hit create action,
        //then get the show view content = responseData

        bikeEventForm.on('ajax:success', function(event, responseData){
          var eventDetails = $(responseData);
          // bikeInfoWindow.close();
          bikeInfoWindow.setContent(eventDetails[0]);
          //setContent doesn't know what to do with a jQuery object
          //eventDetails[0] is the first and only element in the array
          //and since you need the entire element, use [0]

          var removeMarkerLink = eventDetails.find('.bye a')
          removeMarkerLink.on('click', function(event){
            event.preventDefault();

            $.ajax({
              type: 'DELETE',
              url: removeMarkerLink.attr('href')
            })
            marker.setMap(null);
          })
          bindEvents();
        })
      }

      var marker = new google.maps.Marker({
        position: event.latLng,
        map: map,
        draggable: false,
        animation: google.maps.Animation.DROP,
        icon: "<%= asset_path('bike_marker2.png') %>"
      });

      var initialBikeEventForm = $($('#form-incident').html());

      var bikeInfoWindow = new google.maps.InfoWindow();

      //set the content of the infoWindow
      bikeInfoWindow.setContent(initialBikeEventForm[0]);
      bikeInfoWindow.open(map, marker);
      google.maps.event.addListener(bikeInfoWindow,'closeclick',function(){
       marker.setMap(null); //removes the marker then, remove the infowindow
      });

      cancelButton(marker);

      $('#bike_event_latitude').val(event.latLng.lat())
      $('#bike_event_longitude').val(event.latLng.lng())
      bindEvents();
    }
    google.maps.event.addListener(map, 'click', loggedInUser );

  } else {
    google.maps.event.addListener(map, 'click', function loggedOutUserClick(event){
      if (confirm('Would you like to login?') ) {
        window.location = "/login";
      } else {
        alert("You must login to add a bike incident to the map.")
      }
    });
  }

  // Sets the map on all markers in the array.
  function setAllMap(map) {
    for (var i = 0; i < markers.length; i++) {
      markers[i].setMap(map);
    }
  }

  // Removes the markers from the map, but keeps them in the array.
  function clearMarkers() {
    setAllMap(null);
  }

  $('#accidents').click(function() {
    clearMarkers();
    fetchAccidents(map);
  });

  $('#hazards').click(function() {
    clearMarkers();
    fetchRoadHazards(map);
  });

  $('#animals').click(function() {
    clearMarkers();
    fetchAnimals(map);
  });

  $('#other').click(function() {
    clearMarkers();
    fetchOthers(map);
  });

  function cancelButton(marker) {
    $('.cancel-button').on('click', function(event){
     event.preventDefault();
     marker.setMap(null);
    })
  };

  function isInfoWindowOpen (){
      console.log("Stop the markers!");
      console.log("Cancel counter:" + $('.cancel-button:visible').length);
    if ($('.cancel-button:visible').length > 0) {
      return true;
    } else {
      return false;
    }
  }

  function addClickListenerToRemoveMarker(contentsOfInfoWindow, marker) {
    var removeMarkerLink = contentsOfInfoWindow.find('.bye a')
    removeMarkerLink.on('click', function(event){
      event.preventDefault();

      $.ajax({
        type: 'DELETE',
        url: removeMarkerLink.attr('href')
      })
      marker.setMap(null);
    })
  };

  //getting marker data from the database
  function drawPins(map, data) {
    data.forEach(function(bikeEvent){
      var latLng = {lat: +bikeEvent.latitude, lng: +bikeEvent.longitude};

      var marker = new google.maps.Marker({
        position: latLng,
        map: map,
        draggable: false,
        animation: google.maps.Animation.DROP,
        icon: icons[bikeEvent.icon],
        id: bikeEvent.id
      });

      //create infoWindow
      var twoWheeledEvent = $(bikeEvent.details);
      var markerInfoWindow = new google.maps.InfoWindow();
      markerInfoWindow.setContent(twoWheeledEvent[0]);

      addClickListenerToRemoveMarker(twoWheeledEvent, marker);

      google.maps.event.addListener(marker, 'click', function(){
        markerInfoWindow.open(map, marker);
      });
      markers.push(marker);
    });
  }

  // Make an ajax call to get ACCIDENTS to '/bike_events'
  function fetchAccidents(map) {
    $.getJSON('/bike_events?event_kind=Accident', function(data) {
      drawPins(map, data);
    });
  }

  // Make an ajax call to get ACCIDENTS to '/bike_events'
  function fetchRoadHazards(map) {
    $.getJSON('/bike_events?event_kind=Road%20Hazard', function(data) {
      drawPins(map, data);
    });
  }

  function fetchAnimals(map) {
    $.getJSON('/bike_events?event_kind=Freak%2C%20wildlife%20incident', function(data) {
      drawPins(map, data);
    });
  }

  function fetchOthers(map) {
    $.getJSON('/bike_events?event_kind=Other', function(data) {
      drawPins(map, data);
    });
  }

  // Make an ajax get all '/bike_events'
  function fetchAllMarkers(map) {
    $.getJSON('/bike_events', function(data) {
      drawPins(map, data);
    });
  }
});


